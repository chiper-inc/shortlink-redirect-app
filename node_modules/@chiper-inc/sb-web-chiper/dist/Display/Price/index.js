"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Price = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const Icon_1 = require("../../Theme/Icon");
/**
 * A `Price` is a component that displays a number in price format chiper.
 *
 * #### Usage:
 *
 * ```tsx
  import { Price } from "@chiper-inc/sb-web-chiper";

  <Price country="CO" decimals={0} value={14333} />
 * ```
 *
 * #### Demo:
 */
function Price({ country, value, decimals = 0, color = "#2B2845", size = 16, through = false, show = true, }) {
    const locales = {
        CO: "es-CO",
        BR: "pt-BR",
        MX: "es-MX",
        CL: "es-CL",
    };
    const getLocale = (code) => { var _a; return (_a = locales[code]) !== null && _a !== void 0 ? _a : "es-CO"; };
    const resize = Math.ceil((size !== null && size !== void 0 ? size : 16) / 2);
    const adjust = (resize + 2) * 0.1;
    const auxValue = value !== null && value !== void 0 ? value : 0;
    if (show) {
        return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "sbw-flex sbw-flex-row sbw-flex-wrap sbw-items-center", "data-testid": "testIdPrice" }, { children: [country === "BR" && ((0, jsx_runtime_1.jsx)("span", Object.assign({ style: {
                        transform: `translate(${adjust}px, ${adjust}px)`,
                        fontSize: `${resize + 2}px`,
                        color,
                        fontWeight: 500,
                    } }, { children: "R" }))), (0, jsx_runtime_1.jsx)(Icon_1.Icon, { name: "CurrencyDollarSimple", size: resize, color: color, weight: "bold" }), (0, jsx_runtime_1.jsx)("span", Object.assign({ className: `${through ? "sbw-line-through" : ""}`, style: {
                        transform: `translate(${adjust}px, ${adjust}px)`,
                        fontSize: `${size}px`,
                        color,
                    } }, { children: auxValue.toLocaleString(getLocale(country), {
                        minimumFractionDigits: decimals,
                        maximumFractionDigits: decimals,
                    }) }))] })));
    }
    return null;
}
exports.Price = Price;
