"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tag = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const Colors_1 = __importDefault(require("../../Theme/Colors"));
const Icon_1 = require("../../Theme/Icon");
const listSkins = {
    primary: Colors_1.default.secondary.bleuDeFrance,
    secondary: Colors_1.default.secondary.blueJeans,
    success: Colors_1.default.primary.green,
    lightSuccess: Colors_1.default.secondary.philippineGreen,
    warning: Colors_1.default.secondary.brightYellow,
    error: Colors_1.default.primary.chiperBrandRed,
    light: Colors_1.default.primary.darkBlueGray,
};
const DEFAULT_SKIN = "primary";
/**
 * A `Tag` is a label used to categorize, or organize items using keywords that describe them
 *
 * #### Usage:
 *
 * ```tsx
  import { Tag } from "@chiper-inc/sb-web-chiper";

  <Tag text="Label" />
 * ```
 *
 * #### Demo:
 */
function Tag(_a) {
    var { skin = DEFAULT_SKIN, text, icon = "None", outlined = false, className = "" } = _a, rest = __rest(_a, ["skin", "text", "icon", "outlined", "className"]);
    return ((0, jsx_runtime_1.jsxs)("span", Object.assign({ className: `
        sbw-inline-flex
        sbw-items-center
        sbw-whitespace-nowrap
        sbw-rounded-md
        sbw-border
        sbw-border-transparent
        sbw-py-1
        sbw-px-2
        sbw-font-sans
        sbw-text-base
        sbw-leading-none
        ${className}
      `, style: {
            color: listSkins[skin],
            background: outlined ? "transparent" : `${listSkins[skin]}26`,
            borderColor: outlined ? `${listSkins[skin]}4d` : "transparent",
        } }, rest, { children: [(icon && icon !== "None") && ((0, jsx_runtime_1.jsx)("i", Object.assign({ role: "presentation", "data-testid": "tag-icon", className: "sbw-mr-[5px]" }, { children: (0, jsx_runtime_1.jsx)(Icon_1.Icon, { name: icon, color: listSkins[skin], size: 16 }) }))), text] })));
}
exports.Tag = Tag;
Tag.defaultProps = {
    skin: DEFAULT_SKIN,
};
