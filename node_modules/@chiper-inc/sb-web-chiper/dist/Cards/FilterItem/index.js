"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FilterItem = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const Checkbox_1 = require("../../Form/Checkbox");
const Colors_1 = require("../../Theme/Colors");
const Icon_1 = require("../../Theme/Icon");
const Typography_1 = require("../../Theme/Typography");
const normalizeStyle_1 = __importDefault(require("../../Utils/normalizeStyle"));
/**
 * A `FilterItem` is a component that in a row shows the information of a product added to the cart.
 *
 * #### Usage:
 *
 * ```tsx
  import { FilterItem } from "@chiper-inc/sb-web-chiper";

  <FilterItem
    icon= "Storefront"
    title="Factura con anticipo de IVA"
    onClick={() => null}
  />
 * ```
 *
 * #### Demo:
 */
exports.FilterItem = (0, react_1.memo)(({ icon, title, subTitle, selected, onClick, extraData, currencyExtraData, }) => ((0, jsx_runtime_1.jsxs)("button", Object.assign({ type: "button", onClick: onClick, "data-testid": "filterItem", className: `
      sbw-box-border
      sbw-flex
      sbw-h-auto
      sbw-w-full
      sbw-flex-row
      sbw-items-center
      sbw-justify-between
      sbw-border
      sbw-px-[15px]
      sbw-py-[9px]
      ${selected
        ? "sbw-rounded-[4px] sbw-border-primary-green sbw-bg-white"
        : "sbw-border-none sbw-bg-transparent"}
    ` }, { children: [(0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "sbw-flex sbw-w-full sbw-items-center sbw-justify-start sbw-text-left" }, { children: [(0, jsx_runtime_1.jsx)("i", Object.assign({ role: "presentation", "data-testid": "fab-icon" }, { children: (0, jsx_runtime_1.jsx)(Icon_1.Icon, { name: icon, color: selected ? Colors_1.primary.green : Colors_1.primary.yankeesBlue, size: 24 }) })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "sbw-ml-[13px] sbw-mr-4 sbw-flex sbw-flex-col  sbw-justify-center" }, { children: [(0, jsx_runtime_1.jsx)(Typography_1.Typography, Object.assign({ variant: "subtitle", "data-testid": "filterItemTitle" }, { children: (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "sbw-line-clamp-1" }, { children: title })) })), subTitle && ((0, jsx_runtime_1.jsx)(Typography_1.Typography, Object.assign({ variant: "mediumbody", "data-testid": "filterItemSubtitle" }, { children: (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "sbw-mt-[2px] sbw-line-clamp-1" }, { children: subTitle })) })))] }))] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "sbw-flex sbw-items-center sbw-justify-end" }, { children: [extraData && currencyExtraData && ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "sbw-mr-[18px] sbw-flex sbw-w-auto sbw-items-center sbw-truncate" }, { children: [(0, jsx_runtime_1.jsx)(Typography_1.Typography, Object.assign({ variant: "label", "data-testid": "filterItemTitle" }, { children: (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "sbw-block sbw-w-[20px] sbw-truncate" }, { children: currencyExtraData })) })), (0, jsx_runtime_1.jsx)(Typography_1.Typography, Object.assign({ variant: "subtitle", "data-testid": "filterItemTitle" }, { children: (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "sbw-block sbw-w-full sbw-truncate", style: { maxWidth: (0, normalizeStyle_1.default)(70) } }, { children: extraData })) }))] }))), (0, jsx_runtime_1.jsx)(Checkbox_1.Checkbox, { type: "radio", checked: selected, "data-testid": "filterItemChecked", onChange: () => null })] }))] }), "button")));
