"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductRow = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const Colors_1 = __importDefault(require("../../Theme/Colors"));
const Icon_1 = require("../../Theme/Icon");
const Typography_1 = require("../../Theme/Typography");
const listIconSkins = {
    disabled: Colors_1.default.primary.chiperBrandRed,
    change: Colors_1.default.secondary.brightYellow,
};
/**
 * A `ProductRow` is a component that in a row shows the information of a product added to the cart.
 *
 * #### Usage:
 *
 * ```tsx
  import { ProductRow } from "@chiper-inc/sb-web-chiper";

   <ProductRow
    quantity={12}
    oldPrice={43}
    detail="Arroz Blanco Vitamor Diana 500 gr"
    currency= "$"
    price= {19.250}
   />
 * ```
 *
 * #### Demo:
 */
exports.ProductRow = (0, react_1.memo)(({ quantity, oldQuantity, detail, currency, price, disabled = false, hasChanged = false, }) => {
    const iconColor = disabled ? listIconSkins.disabled : listIconSkins.change;
    const typographyColor = disabled ? "gray200" : "yankeesBlue";
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "\n        sbw-flex\n        sbw-h-full\n        sbw-max-h-[72px]\n        sbw-min-h-[52px]\n        sbw-w-full\n        sbw-justify-between\n        sbw-bg-white\n        sbw-p-4\n      ", "data-testid": "product-row" }, { children: [(0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "sbw-mr-4 sbw-flex sbw-w-[32px] sbw-min-w-[32px] sbw-flex-col" }, { children: [(hasChanged || disabled) && ((0, jsx_runtime_1.jsx)(Typography_1.Typography, Object.assign({ variant: "mediumbody", color: "gray200", "data-testid": "oldQuantity" }, { children: (0, jsx_runtime_1.jsx)("span", Object.assign({ className: `sbw-inline-block
              sbw-w-full
              sbw-max-w-max
              sbw-truncate
              sbw-line-through
              ${Colors_1.default.greyscale.gray200}` }, { children: oldQuantity })) }))), !disabled && ((0, jsx_runtime_1.jsx)(Typography_1.Typography, Object.assign({ variant: "mediumbody", color: "yankeesBlue", "data-testid": "quantity" }, { children: (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "sbw-inline-block sbw-w-full sbw-max-w-max sbw-truncate" }, { children: quantity })) })))] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "sbw-mr-6 sbw-flex sbw-w-full sbw-items-center" }, { children: [(disabled || hasChanged)
                        && ((0, jsx_runtime_1.jsx)(Icon_1.Icon, { name: "WarningCircle", color: iconColor, size: 16, weight: "fill", className: "sbw-mr-3 sbw-min-w-4", "data-testid": "icon" })), (0, jsx_runtime_1.jsx)("div", Object.assign({ className: "sbw-w-full sbw-max-w-max sbw-line-clamp-2" }, { children: (0, jsx_runtime_1.jsx)(Typography_1.Typography, Object.assign({ variant: "body", color: typographyColor, "data-testid": "detail" }, { children: detail })) }))] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "sbw-flex sbw-items-start" }, { children: [(0, jsx_runtime_1.jsx)(Typography_1.Typography, Object.assign({ variant: "subhead", color: typographyColor, "data-testid": "currency" }, { children: (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "sbw-inline-block sbw-w-full sbw-max-w-[20px] sbw-truncate sbw-pt-[2px]" }, { children: currency })) })), (0, jsx_runtime_1.jsx)(Typography_1.Typography, Object.assign({ variant: "mediumbody", color: typographyColor, "data-testid": "price" }, { children: (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "sbw-inline-block sbw-w-full sbw-max-w-[80px] sbw-truncate" }, { children: price })) }))] }))] })));
});
