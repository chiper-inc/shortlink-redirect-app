import { HTMLAttributes, ImgHTMLAttributes, ReactElement } from "react";
import { IColors } from "../../Theme/Colors/interface";
import { PhosphorIcons } from "../../Theme/Icon";
import { avatarSizes } from "./props";
export type AvatarTypes = "letter" | "image" | "icon";
export type AvatarSetItem<T = ReactElement> = {
    [avatar in AvatarTypes]: T;
};
interface IAvatarCommon extends HTMLAttributes<HTMLDivElement> {
    /** An optional size property that is a key in the `avatarSizes` */
    size?: keyof typeof avatarSizes;
    /** An optional background color property of type `IColors` */
    background?: IColors;
    /** An optional color property of type `IColors` */
    color?: IColors;
    letter?: never;
    imgSrc?: never;
    icon?: never;
}
interface IImage extends Omit<IAvatarCommon, "imgSrc"> {
    /** A type of avatar that can be either */
    type: "image";
    /** A property that defines the source of an image */
    imgSrc: ImgHTMLAttributes<HTMLImageElement>["src"];
    background?: never;
    color?: never;
}
interface ILetter extends Omit<IAvatarCommon, "letter"> {
    type: "letter";
    /** A letter or text of the `Avatar` */
    letter: string;
}
interface IIcon extends Omit<IAvatarCommon, "icon"> {
    type: "icon";
    /** Phosphor name icon */
    icon?: keyof typeof PhosphorIcons;
}
export type IAvatar = IImage | ILetter | IIcon;
export {};
