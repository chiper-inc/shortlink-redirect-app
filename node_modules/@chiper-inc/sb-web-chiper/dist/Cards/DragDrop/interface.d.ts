/// <reference types="react" />
import { DragEndEvent, DragStartEvent, DraggableAttributes } from "@dnd-kit/core";
interface DraggableChildren {
    isDragging: boolean;
    draggable?: DraggableAttributes;
}
export interface IDragItem {
    id: string;
    key: string;
    children: (({ isDragging, draggable }: DraggableChildren) => JSX.Element | string) | JSX.Element | string;
    dragHandler?: boolean;
    className?: string | ((isDragging: boolean) => void);
    testID?: string;
}
export type TDragItem<T = Record<string, any>> = {
    id: string;
} & T;
export interface DragDropProps {
    items: TDragItem[];
    children: JSX.Element | JSX.Element[];
    onDragEnd: (items: TDragItem<any>[], event: DragEndEvent) => void;
    onDragStart?: (event: DragStartEvent) => void;
    testID?: string;
    vertical?: boolean;
    disabled?: boolean;
    className?: string;
}
export {};
