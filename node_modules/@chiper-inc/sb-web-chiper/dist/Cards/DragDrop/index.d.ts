import { DragDropProps } from "./interface";
/**
 * `DragDrop` and `DragItem` enables the drag and drop functionality for sorting
 * an array of items in a performant, accessible, and extensible manner.
 * It uses the `@dnd-kit/core` and `@dnd-kit/sortable` packages to implement the
 * drag and drop feature. The component accepts various props to control
 * the behavior of the drag and drop feature, such as the items to be sorted,
 * the callbacks for drag events, and the sorting strategy.
 *
 * Get information about DND Kit docs:
 * https://docs.dndkit.com/
 *
 * #### Usage:
 *
 * ```tsx
  import { useState } from "react";
  import { DragDrop, DragItem } from "@chiper-inc/sb-web-chiper";

  interface IDragList {
    id: string
    title: string
  }

  const [itemsDefault, setItemsDefault] = useState<IDragList[]>([
    { id: "1", title: "Chiper" },
    { id: "5", title: "Microsoft" },
  ]);

  const handleDragEnd = (items: IDragList[]) => {
    setItemsDefault(items);
  };

  return (
    <DragDrop
      vertical
      items={itemsDefault}
      onDragEnd={handleDragEnd}
    >
      {itemsDefault.map(({ id, title }) => (
        <DragItem
          id={id}
          key={id}
          className={(isDragging) => `
            ${isDragging ? "shadow-box" : ""}
          `}
        >
          {title}
        </DragItem>
      ))}
    </DragDrop>
  );
 * ```
 *
 * #### Handler drag event
 *
 * You can handler the drag event gets `draggable` from `children`
 * but it requires `dragHandler` and then you can listen to
 * and decide how to handle.
 *
 * ```tsx
  import { useState } from "react";
  import { DragDrop, DragItem } from "@chiper-inc/sb-web-chiper";

  interface IDragList { id: string }

  const [itemsDefault, setItemsDefault] = useState<IDragList[]>([
    { id: "1" }, { id: "5" },
  ]);

  const handleDragEnd = (items: IDragList[]) => {
    setItemsDefault(items);
  };

  return (
    <DragDrop
      items={itemsDefault}
      onDragEnd={handleDragEnd}
    >
      {itemsDefault.map(({ id }) => (
        <DragItem
          id={id}
          key={id}
          dragHandler
        >
          {({ draggable, isDragging }) => (
            <>
              <button type="button" {...draggable}>
                <Icon name="DotsSixHorizontal" />
              </button>
              <div>{id}</div>
            </>
          )}
        </DragItem>
      ))}
    </DragDrop>
  );
 * ```
 *
 * #### Demo:
 */
export declare function DragDrop({ items, children, onDragEnd, onDragStart, className, vertical, disabled, testID, }: DragDropProps): import("react/jsx-runtime").JSX.Element;
