/// <reference types="react" />
import { IDateField } from "./interface";
/**
 * Use `DateField` is a field that allow to select a date or range date and
 * and preview selected dates in the chosen format
 *
 * Get information about the allowed formats in `date-fn` docs:
 * https://date-fns.org/v2.29.3/docs/format
 *
 * #### Usage:
 *
 * ```tsx
  import { useState, useCallback } from "react";
  import { DateField } from "@chiper-inc/sb-web-chiper";

  const [initRange, setInitRange] = useState<Date | undefined>(undefined);
  const [endRange, setEndRange] = useState<Date | undefined>(undefined);

  const [date, setDate] = useState<Date | undefined>(undefined);

  const handleRangeClick = useCallback((init: Date, end?: Date) => {
    setInitRange(init);
    setEndRange(end);
  }, []);

   const handleDateClick = useCallback((clickedDate: Date) => {
    setDate(clickedDate);
  }, []);

  return (
    <DateField
      hasRange
      initDate={initRange}
      endDate={endRange}
      onClick={handleRangeClick}
      formatToShow="dd/MMM/yyyy"
      placeholder="Seleccione un rango de fechas"
    />

     <DateField
      initDate={date}
      onClick={handleDateClick}
      minDate={new Date("2023/04/05")}
      maxDate={new Date("2023/04/25")}
      formatToShow="yyyy MM, dd"
      placeholder="Seleccione una fecha"
    />
  );
 * ```
 *
 * #### Demo:
 *
 */
export declare const DateField: import("react").MemoExoticComponent<({ initDate, endDate, hasRange, onClick, maxDate, minDate, placeholder, helperText, disabled, isValid, full, locale, formatToShow, "data-testid": testID, isReadOnly, icon, }: IDateField) => import("react/jsx-runtime").JSX.Element>;
