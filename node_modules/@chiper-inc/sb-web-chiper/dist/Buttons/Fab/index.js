"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Fab = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const deprecate_1 = require("../../Utils/deprecate");
const Icon_1 = require("../../Theme/Icon");
const props_1 = require("./props");
/**
 * ⚠️ Deprecated. DO NOT USE! Use `IconButton` instead.
 *
 * `FAB` (Floating Action Button) is a circular shaped
 * button component that hovers over content to promote a promoted action.
 *
 * #### Usage:
 *
 * ```tsx
  import { Fab } from "@chiper-inc/sb-web-chiper";

  <Fab icon="Plus" />
 * ```
 *
 * #### Demo:
 * @deprecated
 */
function Fab(_a) {
    var { icon, size = "medium", outlined = false, disabled = false, onClick = () => { }, className = "" } = _a, rest = __rest(_a, ["icon", "size", "outlined", "disabled", "onClick", "className"]);
    const findskin = !outlined && disabled ? "disabled" : "normal";
    (0, deprecate_1.deprecate)({
        message: "Fab is deprecated. Use IconButton instead.",
    });
    return ((0, jsx_runtime_1.jsx)("button", Object.assign({ type: "button", disabled: disabled, onClick: onClick, className: `
        ${props_1.fabSizes[size]}
        ${disabled ? "sbw-opacity-50" : "sbw-opacity-100"}
        ${!disabled ? "hover:sbw-opacity-70" : ""}
        sbw-inline-flex
        sbw-items-center
        sbw-justify-center
        sbw-whitespace-nowrap
        sbw-rounded-full
        sbw-border
        sbw-border-transparent
        sbw-p-1
        sbw-text-center
        sbw-font-sans
        sbw-leading-none
        ${className}
      `, style: {
            background: outlined ? props_1.fabSkins.outline.background : props_1.fabSkins[findskin].background,
            borderColor: outlined ? props_1.fabSkins.outline.border : props_1.fabSkins[findskin].border,
        } }, rest, { children: (icon && icon !== "None") && ((0, jsx_runtime_1.jsx)("i", Object.assign({ role: "presentation", "data-testid": "fab-icon" }, { children: (0, jsx_runtime_1.jsx)(Icon_1.Icon, { name: icon, color: outlined ? props_1.fabSkins.outline.color : props_1.fabSkins[findskin].color, size: size === "large" ? 20 : 14 }) }))) })));
}
exports.Fab = Fab;
