import { ButtonHTMLAttributes, MouseEvent } from "react";
import { IconButtonSizes } from "./props";
import { PhosphorIcons } from "../../Theme/Icon";
export type ButtonSkinType = ("primary" | "secondary" | "outlined");
export interface IIconButton extends ButtonHTMLAttributes<HTMLButtonElement> {
    /** Define button type */
    skinType?: ButtonSkinType;
    /** Phosphor name icon */
    icon: keyof typeof PhosphorIcons | "None";
    /** Control the size of a button with `size` prop */
    size?: keyof typeof IconButtonSizes;
    /** Whether the button is disabled */
    disabled?: boolean;
    /** Enable to handle call function click */
    onClick?: (e: MouseEvent<HTMLButtonElement>) => void;
    /** Tooltip’s text to be displayed */
    tooltipText?: string;
    /** Select tooltip’s position in relation to its trigger element */
    positionTooltip?: TooltipPosition;
    /** Define the test Id */
    dataTestId?: string;
}
export type TooltipPosition = "up" | "down" | "left" | "right";
export interface ITooltipButton {
    /** Trigger element for the tooltip */
    children: JSX.Element;
    /** Tooltip’s text to be displayed */
    text?: string;
    /** Select tooltip’s position in relation to its trigger element */
    position?: TooltipPosition;
}
