import { InputHTMLAttributes } from "react";
interface TextFieldProps extends InputHTMLAttributes<HTMLInputElement> {
    label?: string;
    error?: string;
    placeholder?: string;
    disabled?: boolean;
    optional?: string;
    descriptiveText?: string;
    isFocus?: boolean;
    /** Define the test Id */
    dataTestId?: string;
    mask?: string;
}
/**
 * `TextFieldUnderline` allow users to enter text into a UI.
 *  It typically appears in forms and dialogs.
 *
 * #### Usage:
 *
 * ```tsx
  import { useState } from "react";
  import { TextFieldUnderline } from "@chiper-inc/sb-web-chiper";

  const [input, setInput] = useState("");

  <TextFieldUnderline
    label="edad"
    optional="aÃ±os"
    descriptiveText="introdusca edad"
    onChange={(e) => setInput(e.target.value)}
    placeholder="introdusca numero"
    value={input}
  />

  <TextFieldUnderline
    disabled
    placeholder="introdusca numero"
    label="algun"
    optional="numero"
  />

  <TextFieldUnderline
    onChange={(e) => setInput(e.target.value)}
    value={input}
    placeholder="introdusca un numero"
    error="rellene el campo"
    mask="99.999.999/9999-99"
  />
 * ```
 *
 * #### Demo:
 */
export declare function TextFieldUnderline({ label, error, placeholder, disabled, optional, descriptiveText, onChange, value, isFocus, dataTestId, mask, ...props }: TextFieldProps): import("react/jsx-runtime").JSX.Element;
export declare namespace TextFieldUnderline {
    var defaultProps: {
        error: boolean;
        label: boolean;
        placeholder: boolean;
        disabled: boolean;
        optional: boolean;
        descriptiveText: boolean;
        isFocus: boolean;
        dataTestId: string;
        mask: undefined;
    };
}
export {};
