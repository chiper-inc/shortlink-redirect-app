/// <reference types="react" />
import { ITextFieldWithChip } from "./interface";
/**
 * `TextFieldWithChip` allow users to enter text with Chip.
 *
 * #### Usage:
 *
 * ```tsx
  import { useState } from "react";
  import { TextFieldWithChip } from "@chiper-inc/sb-web-chiper";

  const [input, setInput] = useState("");
  const [chips, setChips] = useState<any[]>([]);

  const handlePressEnter = (e: any) => {
    const textValue = e.target.value;
    if (e.key === ",") e.preventDefault();
    if (e.key !== "," || !input) return;
    setChips((prevState) => [...prevState, textValue]);
    setInput("");
  };

  const remove = (chipToRemove: any) => {
    const updatedChips = chips && chips.filter((chip) => chip !== chipToRemove);
    setChips(updatedChips);
  };

  <TextFieldWithChip
    {...{ chips, setChips }}
    value={input}
    name="basic"
    placeholder="Email"
    type="email"
    required
    onChange={(e) => setInput(e.target.value)}
    onKeyDown={handlePressEnter}
    removeChip={remove}
    helperText="Puedes agregar varios mails separandolos con coma."
  />

  <TextFieldWithChip
    {...{ chips, setChips }}
    value={input}
    name="basic"
    placeholder="Email"
    type="email"
    required
    onChange={(e) => setInput(e.target.value)}
    onKeyDown={handlePressEnter}
    removeChip={remove}
    helperText="Error, please fill field"
    isValid={false}
  />
 * ```
 *
 * #### Demo:
 */
export declare const TextFieldWithChip: import("react").ForwardRefExoticComponent<ITextFieldWithChip & import("react").RefAttributes<HTMLInputElement>>;
