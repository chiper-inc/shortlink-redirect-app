"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Typography = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const interface_1 = require("../Colors/interface");
const props_1 = require("./props");
const DEFAULT_COLOR = "yankeesBlue";
const DEFAULT_BOLD = false;
const DEFAULT_VARIANT = "h1";
/**
 * `Typography` helps us create hierarchies, organize
 * information, and guide our users through pages.
 *
 * #### Usage:
 *
 * ```tsx
  import { Typography } from "@chiper-inc/sb-web-chiper";

  <Typography bold>
    Torre de Control
  </Typography>

  <Typography variant="h2" bold>
    Torre de Control
  </Typography>

  <Typography variant="body" as="span">
    Torre de Control
  </Typography>
 * ```
 *
 * #### Demo:
 */
function Typography({ children, as = null, color = DEFAULT_COLOR, bold = DEFAULT_BOLD, variant = DEFAULT_VARIANT, "data-testid": testID = "", }) {
    const fontWeight = bold ? "sbw-font-bold" : "sbw-font-normal";
    const Component = as || props_1.textVariants[variant].tag;
    return ((0, jsx_runtime_1.jsx)(Component, Object.assign({ "data-testid": testID, className: `
        ${fontWeight}
        ${props_1.textVariants[variant].classNames}
        sbw-font-sans
      `, style: {
            color: interface_1.setColors[color],
        } }, { children: children })));
}
exports.Typography = Typography;
Typography.defaultProps = {
    as: null,
    color: DEFAULT_COLOR,
    bold: DEFAULT_BOLD,
    variant: DEFAULT_VARIANT,
};
