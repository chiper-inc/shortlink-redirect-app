"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ColorGroup = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
function ColorRectangle({ color, colorName, colorGroupName }) {
    const [successCopy, setSuccessCopy] = (0, react_1.useState)("sbw-opacity-0");
    const copyColor = `Theme.colors.${colorGroupName}.${colorName}`;
    (0, react_1.useEffect)(() => {
        setTimeout(() => setSuccessCopy("sbw-opacity-0"), 2000);
    }, [successCopy]);
    return ((0, jsx_runtime_1.jsx)("button", Object.assign({ type: "button", title: copyColor, onClick: () => {
            navigator.clipboard.writeText(copyColor);
            setSuccessCopy("sbw-opacity-100 sbw-animate-pulse");
        }, className: `sbw-h-32
        sbw-w-32
        sbw-overflow-hidden
        sbw-whitespace-nowrap
        sbw-rounded-md
        sbw-border
        sbw-border-gray-100
        sbw-p-2
        sbw-text-white
      `, style: {
            backgroundColor: color,
        } }, { children: (0, jsx_runtime_1.jsx)("span", Object.assign({ className: `${successCopy}
        sbw-rounded-sm
        sbw-bg-[rgba(0,0,0,0.3)]
        sbw-p-2
        sbw-text-xs
        sbw-font-semibold
        sbw-leading-none
      ` }, { children: "Copied" })) })));
}
function ColorGroup({ colors, colorGroupName, }) {
    return ((0, jsx_runtime_1.jsx)("div", Object.assign({ className: "sbw-grid\n      sbw-grid-cols-[repeat(auto-fill,minmax(128px,1fr))]\n      sbw-gap-3" }, { children: colors.map(([colorName, color]) => ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)(ColorRectangle, { color: color, colorName: colorName, colorGroupName: colorGroupName }), (0, jsx_runtime_1.jsx)("h4", Object.assign({ className: "sbw-font-semibold" }, { children: colorName })), (0, jsx_runtime_1.jsx)("p", Object.assign({ className: "sbw-text-sm sbw-text-gray-500" }, { children: color.toUpperCase() }))] }, colorName))) })));
}
exports.ColorGroup = ColorGroup;
