import { ITabList } from "../interface";
/**
 * A `TabList` renders a list of tab items with optional dragging functionality.
 * It takes in several props including `TabItem`, which is the child element to
 * render as tab items, `className`, which is the additional CSS class to apply
 * to the component, `justify`, which is a boolean value that determines whether
 * to justify the tab items evenly or center them, `itemWidth`, which is the fixed
 * width of each tab item, and `testID`, which is the ID to use for the test element.
 *
 * It accepts the `to` prop to change the route of a page, but it can also be used
 * with the `tabpanel` role to simply display content on click without changing routes.
 *
 * #### Usage:
 *
 * ```tsx
  import { TabList, TabItem } from "@chiper-inc/sb-web-chiper";

  <TabList
    justify={false}
    className="sbw-bg-white sbw-shadow-bottom"
    itemWidth={100}
  >
    <TabItem
      title="Item 1"
      to="my-route1"
      onClick={(e) => e.preventDefault()}
      selected
      actived
    />
    <TabItem
      title="Item 2"
      to="my-route2"
      onClick={(e) => e.preventDefault()}
      selected={false}
      actived
    />
  </TabList>
 * ```
 *
 * #### Usage with `tabpanel`:
 *
 * ```tsx
  import { TabList, TabItem } from "@chiper-inc/sb-web-chiper";
  const [tabSelected, setTabSelected] = useState("");

  <TabList className="sbw-bg-white">
    <TabItem
      actived
      key={uuidv4()}
      title={title}
      iconName={iconName}
      id={`tab-${id}`}
      to={`#panel-${id}`}
      aria-controls={`panel-${id}`}
      selected={tabSelected === id}
      onClick={(e) => {
        e.preventDefault();
        setTabSelected(id);
      }}
    />
  </TabList>
  <div
    role="tabpanel"
    id={`panel-${id}`}
    aria-labelledby={`tab-${id}`}
    className={tabSelected === id ? "sbw-block" : "sbw-hidden"}
  >
    <Typography variant="h2">
      {title}
    </Typography>
    <Typography variant="body">
      Lorem ipsum dolor sit amet consectetur, adipisicing elit.
    </Typography>
  </div>
 * ```
 *
 * #### Demo:
 */
export declare function TabList({ children, className, justify, itemWidth, "data-testid": testID, }: ITabList): import("react/jsx-runtime").JSX.Element;
