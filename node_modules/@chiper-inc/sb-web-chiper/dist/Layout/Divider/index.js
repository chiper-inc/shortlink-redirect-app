"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Divider = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const interface_1 = require("../../Theme/Colors/interface");
const DEFAULT_BACKGROUND = "gray25";
/**
 * A `Divider` is a thin line that separates or groups content in various layouts
 *
 * #### Usage:
 *
 * ```tsx
  import { Divider } from "@chiper-inc/sb-web-chiper";

  <Divider />
 * ```
 *
 * #### Demo:
 */
function Divider(_a) {
    var { width = "100%", height = 1, background = DEFAULT_BACKGROUND, className = "" } = _a, rest = __rest(_a, ["width", "height", "background", "className"]);
    return ((0, jsx_runtime_1.jsx)("hr", Object.assign({ className: `sbw-border-none ${className}`, style: {
            width: width || "100%",
            height: height || 1,
            background: interface_1.setColors[background],
            minHeight: 1,
        } }, rest)));
}
exports.Divider = Divider;
Divider.defaultProps = {
    background: DEFAULT_BACKGROUND,
};
