import { ReactNode } from "react";
export interface ITable {
    children: ReactNode[] | ReactNode;
    /** A total number of elements data */
    dataLength: number;
    /** A function that takes a event and page number as an argument */
    fetchMore: () => void | undefined;
    /** It tells the `InfiniteScroll` component on reaching the bottom and shows an `endMessage` */
    hasMore: boolean;
    /** Send a `loader` component to show while the component waits for the next load of data */
    loader?: ReactNode;
    /** Set the `scrollableTarget` prop to reference the DOM element and fetching more data */
    scrollableTarget?: ReactNode;
    /** This message is shown at the bottom and `hasMore` is false */
    endMessage?: ReactNode;
}
export interface ITableScroll {
    /** A function that takes a event and page number as an argument */
    fetchMore: () => void | undefined;
    /** It tells the `InfiniteScroll` component on reaching the bottom and shows an `endMessage` */
    hasMore: boolean;
    /** Send a `loader` component to show while the component waits for the next load of data */
    loader?: ReactNode;
    /** Set the `scrollableTarget` prop to reference the DOM element and fetching more data */
    scrollableTarget?: string;
    /** This message is shown at the bottom and `hasMore` is false */
    endMessage?: ReactNode;
    /** Set the rows data */
    rows: {
        [key: string]: any;
    }[];
    /** Set the columns data */
    columns: {
        title: string | React.ReactNode;
        sorteable?: boolean;
        key: string;
    }[];
    newStyle?: boolean;
    heightTable: string;
}
