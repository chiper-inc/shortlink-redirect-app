"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Modal = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const PortalModal_1 = __importDefault(require("./PortalModal"));
const ModalElement_1 = require("./ModalElement");
const props_1 = require("./props");
/**
 * A `Modal` is a component that can contain critical information,
 * require decisions, or involve multiple tasks.
 *
 * #### Usage:
 *
 * ```tsx
  import { Modal } from "@chiper-inc/sb-web-chiper";

  const [show, setShow] = useState(false);

  <Button
    text="Open"
    onClick={() => setShow(true)}
    skin="gray"
    outlined
  />

  <Modal
    title="Modal title"
    show={show}
    setShow={setShow}
  >
    <div>Modal content</div>
  </Modal>
 * ```
 *
 * #### Demo:
 */
function Modal({ children, show, setShow, config, title, }) {
    const handleKeyPress = (0, react_1.useCallback)((event) => {
        if (event.key === "Escape")
            setShow(false);
    }, [setShow]);
    (0, react_1.useEffect)(() => {
        if (show) {
            document.addEventListener("keydown", handleKeyPress);
            return () => {
                document.removeEventListener("keydown", handleKeyPress);
            };
        }
        return undefined;
    }, [handleKeyPress, show]);
    if (show) {
        return ((0, jsx_runtime_1.jsx)(PortalModal_1.default, Object.assign({ "data-testid": "component-modal-portal", wrapperId: "modal-portal" }, { children: (0, jsx_runtime_1.jsx)(ModalElement_1.ModalElement, Object.assign({}, {
                children,
                show,
                setShow,
                config,
                title,
            })) })));
    }
    return null;
}
exports.Modal = Modal;
Modal.defaultProps = {
    config: props_1.defaultModalConfig,
};
