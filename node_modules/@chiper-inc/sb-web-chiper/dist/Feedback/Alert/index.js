"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Alert = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const Icon_1 = require("../../Theme/Icon");
const Colors_1 = __importDefault(require("../../Theme/Colors"));
/**
 * The `Alert` component is a visual element designed to communicate
 * a message to the end user. It is typically used to provide feedback
 * or to alert the user of important information.
 *
 * #### Usage:
 *
 * ```tsx
  import { Alert, Theme } from "@chiper-inc/sb-web-chiper";

  <Alert
    icon="CheckCircle"
    text="Lorem ipsum dolor sit amet"
    colorIcon={Theme.colors.primary.green}
    weight="fill"
  />
 * ```
 *
 * #### Demo:
 */
function Alert(_a) {
    var { text, icon = "None", widthClass = "sbw-w-full", colorIcon = Colors_1.default.primary.yankeesBlue, weight = "regular", sizeIcon = 19.5 } = _a, rest = __rest(_a, ["text", "icon", "widthClass", "colorIcon", "weight", "sizeIcon"]);
    return ((0, jsx_runtime_1.jsxs)("span", Object.assign({ className: `
        ${widthClass}
        sbw-flex
        sbw-min-h-16
        sbw-max-w-35.5
        sbw-items-center
        sbw-rounded
        sbw-bg-primary-yankeesBlue
        sbw-p-4
        sbw-text-primary-white
      ` }, rest, { children: [icon && icon !== "None" && ((0, jsx_runtime_1.jsx)("i", Object.assign({ role: "presentation", "data-testid": "alert-icon", className: "sbw-mr-10.25" }, { children: (0, jsx_runtime_1.jsx)(Icon_1.Icon, { name: icon, size: sizeIcon, color: colorIcon, weight: weight }) }))), text] })));
}
exports.Alert = Alert;
