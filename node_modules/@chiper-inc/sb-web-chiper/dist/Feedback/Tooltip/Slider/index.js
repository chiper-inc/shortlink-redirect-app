"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Slide = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const uuid_1 = require("uuid");
const Icon_1 = require("../../../Theme/Icon");
const Colors_1 = __importDefault(require("../../../Theme/Colors"));
function SlideButton({ icon, disabled, onClick, testID, }) {
    return ((0, jsx_runtime_1.jsx)("button", Object.assign({ className: `
        sbw-flex
        sbw-h-8
        sbw-w-8
        sbw-items-center
        sbw-justify-center sbw-rounded-full
        sbw-transition-colors
        ${disabled ? "sbw-bg-greyscale-gray5" : "sbw-bg-primary-green"}
      `, type: "button", disabled: disabled, onClick: onClick, "data-testid": testID }, { children: (0, jsx_runtime_1.jsx)(Icon_1.Icon, { size: 16, name: icon, color: disabled ? Colors_1.default.primary.green : "white" }) })));
}
function Slide({ children, modeDark, }) {
    const [pos, setPos] = (0, react_1.useState)(0);
    (0, react_1.useEffect)(() => {
        if (children.length > 3) {
            throw new Error("Tooltip description can have only a maximum of 3 items");
        }
    }, [children]);
    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)("span", Object.assign({ className: `sbw-text-sm ${modeDark ? "sbw-text-white" : "sbw-text-primary-yankeesBlue"}` }, { children: children[pos] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "sbw-m-2 sbw-flex sbw-items-center sbw-justify-between sbw-gap-28" }, { children: [(0, jsx_runtime_1.jsx)("div", Object.assign({ className: "sbw-m-1 sbw-inline-flex sbw-gap-1.5" }, { children: children.map((_, index) => ((0, jsx_runtime_1.jsx)("button", { type: "button", "aria-label": "slide-dot", onClick: () => setPos(index), className: `
                sbw-h-1.5
                sbw-w-1.5
                sbw-rounded-full
                ${index === pos
                                ? "sbw-bg-primary-green"
                                : "sbw-bg-greyscale-gray5"}
                sbw-transition-colors
              ` }, (0, uuid_1.v4)()))) })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "sbw-m-1 sbw-inline-flex sbw-gap-4" }, { children: [(0, jsx_runtime_1.jsx)(SlideButton, { icon: "ArrowLeft", disabled: pos <= 0, testID: "tooltip-arrow-left-btn", onClick: () => setPos(pos - 1) }), (0, jsx_runtime_1.jsx)(SlideButton, { icon: "ArrowRight", disabled: pos >= children.length - 1, testID: "tooltip-arrow-right-btn", onClick: () => setPos(pos + 1) })] }))] }))] }));
}
exports.Slide = Slide;
