import { IFilters } from "./interface";
/**
 * The `Filters` is a reusable component that provides
 * a filter button with an associated dropdown menu.
 * It allows users to apply filters to a specific
 * set of data or content.
 *
 * #### Usage:
 *
 * ```tsx
  import { Filters, SelectorGroup, SelectorItem } from "@chiper-inc/sb-web-chiper";

  const [status, setStatus] = useState("");

  <Filters
    label="Filters"
    size="medium"
    actived={!!status}
    disabled={false}
  >
    <div className="absolute top-full w-80 shadow-sm">
      <SelectorGroup groupName="Status">
        <SelectorItem
          name="status"
          label="Pending"
          value="1"
          type="radio"
          checked={status === "1"}
          onChange={(event) => setStatus(event.target.value)}
          onClick={() => setStatus("")}
        />
        <SelectorItem
          name="status"
          label="Active"
          value="2"
          type="radio"
          checked={status === "2"}
          onChange={(event) => setStatus(event.target.value)}
          onClick={() => setStatus("")}
        />
      </SelectorGroup>
    </div>
  </Filters>
 * ```
 *
 * #### Demo:
 */
export declare function Filters({ label, children, className, size, disabled, actived, ...rest }: IFilters): import("react/jsx-runtime").JSX.Element;
