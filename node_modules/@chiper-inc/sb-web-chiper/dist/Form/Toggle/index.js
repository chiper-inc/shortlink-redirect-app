"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Toggle = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const Icon_1 = require("../../Theme/Icon");
/**
 * A `Toggle` Switch Allows users a single item On or Off.
 *
 * #### Usage:
 *
 * ```tsx
  import { Toggle } from "@chiper-inc/sb-web-chiper";

  <Toggle />
 * ```
 *
 * #### Demo:
 */
exports.Toggle = (0, react_1.forwardRef)((_a, ref) => {
    var { onChange, withIcon = false, className = "", checked = false } = _a, rest = __rest(_a, ["onChange", "withIcon", "className", "checked"]);
    const [isChecked, setIsChecked] = (0, react_1.useState)(checked);
    const handleToggle = (event) => {
        setIsChecked(!isChecked);
        if (onChange) {
            onChange(event);
        }
    };
    return ((0, jsx_runtime_1.jsxs)("label", Object.assign({ className: className }, { children: [(0, jsx_runtime_1.jsx)("input", Object.assign({ ref: ref, type: "checkbox", className: "sbw-peer sbw-sr-only", checked: isChecked, onChange: handleToggle }, rest)), (0, jsx_runtime_1.jsx)("span", Object.assign({ "data-testid": "toggle-container", className: `
          sbw-group
          sbw-relative
          sbw-flex
          sbw-h-6
          sbw-w-12
          sbw-cursor-pointer
          sbw-items-center
          sbw-rounded-full
          sbw-bg-greyscale-gray60
          sbw-transition
          sbw-duration-200
          sbw-ease-in-out
          hover:sbw-bg-greyscale-gray100
          peer-checked:sbw-bg-primary-green
          peer-checked:hover:sbw-bg-secondary-philippineGreen
          peer-focus:sbw-outline-secondary-brightYellow
          peer-focus-visible:sbw-outline
          peer-focus-visible:sbw-outline-2
          peer-disabled:sbw-bg-greyscale-gray25
          peer-disabled:hover:sbw-bg-greyscale-gray25
        ` }, { children: (0, jsx_runtime_1.jsx)("span", Object.assign({ "data-testid": "toggle-item", className: `
            sbw-absolute
            sbw-left-[3px]
            sbw-flex
            sbw-h-[18px]
            sbw-w-[18px]
            sbw-items-center
            sbw-justify-center
            sbw-rounded-full
            sbw-bg-white
            sbw-text-greyscale-gray60
            sbw-transition-all
            sbw-duration-200
            sbw-ease-in-out
            group-hover:sbw-text-greyscale-gray100
            group-active:sbw-w-6
            peer-checked:group-hover:sbw-text-secondary-philippineGreen
            peer-checked:group-active:-sbw-ml-[28px]
            peer-checked:group-[]:sbw-left-full
            peer-checked:group-[]:-sbw-ml-[22px]
            peer-checked:group-[]:sbw-text-primary-green
            peer-disabled:group-hover:sbw-text-greyscale-gray60
            peer-disabled:group-[]:sbw-bg-greyscale-gray5
            peer-disabled:group-[]:sbw-text-greyscale-gray60
          ` }, { children: withIcon && ((0, jsx_runtime_1.jsx)(Icon_1.Icon, { name: isChecked ? "Check" : "X", size: 14 })) })) }))] })));
});
