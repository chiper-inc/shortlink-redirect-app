"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Checkbox = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const deprecate_1 = require("../../Utils/deprecate");
const Colors_1 = __importDefault(require("../../Theme/Colors"));
const Icon_1 = require("../../Theme/Icon");
/**
 * A `Checkbox` component that allows users to select one or more options from a set of choices
 *
 * #### Usage:
 *
 * ```tsx
  import { Checkbox } from "@chiper-inc/sb-web-chiper";

  <Checkbox label="Label" />
 * ```
 *
 * #### Demo:
 */
exports.Checkbox = (0, react_1.forwardRef)(({ value, name, id, onChange, onFocus, onClick, checked, label, disabled = false, type = "checkbox", className = "", "data-testid": testID = "", }, ref) => {
    (0, deprecate_1.deprecate)({
        show: type === "radio",
        message: "The radio prop type is no longer supported in Checkbox. Please use RadioButtons instead.",
    });
    return ((0, jsx_runtime_1.jsxs)("label", Object.assign({ "data-testid": "label-checkbox", className: `
          sbw-relative
          sbw-box-border
          sbw-inline-flex
          sbw-cursor-pointer
          sbw-select-none
          sbw-items-center
          sbw-text-black
          ${className}
        ` }, { children: [(0, jsx_runtime_1.jsx)("input", { ref: ref, type: type, name: name, "data-testid": testID, id: id, value: value, checked: checked, onChange: onChange, onFocus: onFocus, onClick: onClick, disabled: disabled, className: "sbw-peer sbw-sr-only" }), (0, jsx_runtime_1.jsx)("div", Object.assign({ className: `
            ${type === "radio"
                    ? "sbw-rounded-full"
                    : "sbw-rounded-[4px]"}
            ${disabled
                    ? "sbw-border-greyscale-gray60"
                    : "sbw-border-primary-darkBlueGray hover:sbw-border-primary-yankeesBlue"}
            sbw-relative
            sbw-inline-flex
            sbw-h-5
            sbw-w-5
            sbw-shrink-0
            sbw-items-center
            sbw-justify-center
            sbw-border
            sbw-bg-primary-white
            after:sbw-content-[""]
            after:peer-checked:sbw-absolute
            after:peer-checked:sbw-h-full
            after:peer-checked:sbw-w-full
            after:peer-checked:sbw-animate-ping-once
            peer-focus-visible:sbw-outline
            peer-focus-visible:sbw-outline-2
            peer-focus-visible:sbw-outline-secondary-brightYellow
            ${disabled ? "peer-checked:sbw-bg-greyscale-gray60" : "peer-checked:sbw-border-primary-green peer-checked:sbw-bg-primary-green after:peer-checked:sbw-bg-primary-green after:peer-hover:sbw-border-secondary-productiva after:peer-hover:sbw-bg-secondary-productiva"}
            ${type === "radio"
                    ? "after:peer-checked:sbw-rounded-full"
                    : "after:peer-checked:sbw-rounded-[4px]"}
          ` }, { children: (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "sbw-relative sbw-z-10" }, { children: (0, jsx_runtime_1.jsx)(Icon_1.Icon, { name: "Check", size: 14, color: Colors_1.default.primary.white }) })) })), label && ((0, jsx_runtime_1.jsx)("div", Object.assign({ className: `
            sbw-ml-3
            sbw-text-base
            sbw-leading-tight
            ${disabled ? "sbw-text-greyscale-gray200" : "sbw-text-primary-yankeesBlue"}
          ` }, { children: label })))] })));
});
