import { IMultipleDropdown } from "../Dropdowns/interface";
/**
 * ⚠️ MultipleDropdown is deprecated. DO NOT USE! Use `SelectorGroup` instead.
 *
 * #### Interface:
 *
 * ```tsx
  export interface IDropdownItem {
    value: string;
    text: string;
    subItems?: IDropdownItem[];
  }
 * ```
 *
 * #### Usage:
 *
 * ```tsx
  import { MultipleDropdown } from "@chiper-inc/sb-web-chiper";

  const [values, setValues] = useState<string[]>([]);

  const handleClick = useCallback((itemValue: string) => {
    setValues((prev) => (prev.includes(itemValue)
      ? prev.filter((i) => i !== itemValue)
      : [...prev, itemValue]));
  }, []);

  <MultipleDropdown
    items={[
      {
        text: "Item 1",
        value: "123",
        icon: "FolderPlus",
        subItems: [
          { text: "Sub Item 1-2", value: "124" },
          { text: "Sub Item 1-3", value: "125" },
        ],
      },
      {
        text: "Item 2",
        value: "126"
      },
      {
        text:"Item 3",
        value: "127"
      },
      {
        text: "Item 4",
        value: "125",
        subItems: [
          { text: "Sub Item 4-1", value: "121", icon: "FolderDotted" },
          { text: "Sub Item 4-2", value: "1220", icon: "FolderLock" },
          { text: "Sub Item 4-3", value: "1203" },
          { text: "Sub Item 4-4", value: "1202" },

        ],
      },
  ]}
  selectedValues={values}
  onItemClick={handleClick}
/>
 * ```
 *
 * #### Demo:
 * @deprecated
 */
export declare function MultipleDropdown({ items, onItemClick, selectedValues, width, maxHeight, }: IMultipleDropdown): import("react/jsx-runtime").JSX.Element;
