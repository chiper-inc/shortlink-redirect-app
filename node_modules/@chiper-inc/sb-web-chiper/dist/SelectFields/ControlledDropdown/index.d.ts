import { IControlledDropdown } from "../Dropdowns/interface";
/**
 * A `ControlledDropdown` is a component that allows select a multiple items
 *
 * #### Interface:
 *
 * ```tsx
  export interface IDropdownItem {
    value: string;
    text: string;
    subItems?: IDropdownItem[];
  }
 * ```
 *
 * #### Usage:
 *
 * ```tsx
  import { ControlledDropdown } from "@chiper-inc/sb-web-chiper";

  const [values, setValues] = useState<string[]>([]);

  const handleConfirmationClick = useCallback((itemValues: string[]) => {
    setValues(itemValues);
  }, []);

  <ControlledDropdown
    items={[
      {
        text: "Item 1",
        value: "123",
        subItems: [
          { text: "Sub Item 1-2", value: "124" },
          { text: "Sub Item 1-3", value: "125" },
        ],
      },
      {
        text: "Item 2",
        value: "126"
      },
      {
        text: "Item 3",
        value: "127"
      },
      {
        text: "Item 4",
        value: "10",
        subItems: [
          { text: "Sub Item 4-1", value: "121" },
          { text: "Sub Item 4-2", value: "1220" },
          { text: "Sub Item 4-3", value: "1203" },
          { text: "Sub Item 4-4", value: "1202" },

        ],
      },
      {
        text: "Item 5",
        value: "17"
      },
    ]}
    leftButtonText="Cancelar"
    rightButtonText="Confirmar"
    onConfimationClick={handleConfirmationClick}
  />
 * ```
 *
 * #### Demo:
 */
export declare function ControlledDropdown({ items, onConfimationClick, onCancelClick, selectedValues, width, maxHeight, leftButtonText, rightButtonText, }: IControlledDropdown): import("react/jsx-runtime").JSX.Element;
