/// <reference types="react" />
import { ISelectField } from "./interface";
/**
 * A `SelectField` is a field that allows user to select one option among others
 *
 * #### Interface:
 *
 * ```tsx
  interface ISelectOption {
    text: string;
    value: string;
  }
   ```
 *
 * #### Usage:
 *
 * ```tsx
  import { useState } from "react";
  import { SelectField } from "@chiper-inc/sb-web-chiper";

  const [value, setValue] = useState<string>("");

  const onChange = (itemSelected: string) => setValue(itemSelected);

  return (
    <SelectField
      name="Options"
      value={value}
      options=[
        {
          text: "option one",
          value: "1"
        },
        {
          text:"option two",
          value: "2"
        }
      ]
      onChange={onChange}
     />
  );
 * ```
 *
 * **Note**: If you use `Formik`, you should handle changes like this:
 *
 * ```tsx
  const onChange = (itemSelected: string, name: string) => {
    formik.setFieldValue(name, itemSelected);
  }
 * ```
 *
 * #### Demo:
 *
 */
export declare const SelectField: import("react").MemoExoticComponent<({ onChange, icon, placeholder, disabled, value, helperText, isValid, full, name, options, "data-testid": testID, maxDropdownHeight, type, isReadOnly, }: ISelectField) => import("react/jsx-runtime").JSX.Element>;
