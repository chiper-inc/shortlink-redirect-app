"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SimpleDropdown = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_2 = require("react");
const DropdownListItem_1 = require("../Dropdowns/DropdownListItem");
const DropdownWrapper_1 = require("../Dropdowns/DropdownWrapper");
/**
 * A `SimpleDropdown` is a component that only allows select a ONE item
 *
 * #### Interface:
 *
 * ```tsx
  export interface IDropdownItem {
    value: string;
    text: string;
    icon?: keyof typeof PhosphorIcons;
    subItems?: IDropdownItem[];
  }
 * ```
 *
 * #### Usage:
 *
 * ```tsx
  import { SimpleDropdown } from "@chiper-inc/sb-web-chiper";

  const [value, setValue] = useState<string>();

  const handleClick = useCallback((itemValue: string) => {
    setValue(itemValue);
  }, []);

  <SimpleDropdown
    selectedValue={value}
    onItemClick={handleClick}
    items={[
      {
        text: "Item 1",
        value: "123",
        icon: "FolderPlus",
        subItems: [
          { text: "Sub Item 1-2", value: "124" },
          { text: "Sub Item 1-3", value: "125" },
        ],
      },
      {
        text: "Item 2",
        value: "126"
      },
      {
        text:"Item 3",
        value: "127"
      },
      {
        text: "Item 4",
        value: "125",
        subItems: [
          { text: "Sub Item 4-1", value: "121", icon: "FolderDotted" },
          { text: "Sub Item 4-2", value: "1220", icon: "FolderLock" },
          { text: "Sub Item 4-3", value: "1203" },
          { text: "Sub Item 4-4", value: "1202" },

        ],
      },
    ]}
  />
 * ```
 *
 * #### Demo:
 */
function SimpleDropdown({ items, onItemClick, selectedValue, type = "simple", width = "normal", maxHeight = "460px", }) {
    const isSelected = (0, react_2.useCallback)((itemValue) => (selectedValue === itemValue), [selectedValue]);
    return ((0, jsx_runtime_1.jsx)(DropdownWrapper_1.DropdownWrapper, Object.assign({ width: width, maxHeight: maxHeight }, { children: items.map((item, i) => ((0, react_1.createElement)(DropdownListItem_1.DropdownListItem, Object.assign({}, item, { type: type, key: `dropdown-item-${item.text + i}`, isSelected: isSelected, onClick: onItemClick })))) })));
}
exports.SimpleDropdown = SimpleDropdown;
